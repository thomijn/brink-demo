/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import { MeshTransmissionMaterial, useGLTF, useTexture } from '@react-three/drei'

function Model(props) {
    const { nodes, materials } = useGLTF('/brink-demo.glb')
    const texture = useTexture('/bake-test.jpg')
    texture.flipY = false
    const material = new THREE.MeshBasicMaterial({
        map: texture,
    })

    return (
        <group {...props} dispose={null}>
            <mesh castShadow receiveShadow geometry={nodes.Cube_1.geometry} material={material} />
            <mesh castShadow receiveShadow geometry={nodes.Cube_2.geometry}>
                {/* <meshPhysicalMaterial roughness={0} metalness={0.1} /> */}
                <MeshTransmissionMaterial roughness={0.2} metalness={0.1} transmission={0.8} ior={1} />
            </mesh>
            <mesh castShadow receiveShadow geometry={nodes.Cube_3.geometry} material={material} />
            <mesh castShadow receiveShadow geometry={nodes.Cube_4.geometry} material={material} />
            <mesh castShadow receiveShadow geometry={nodes.Cube_5.geometry}>
                <meshBasicMaterial color="#b8d4b4" map={texture} map-flipY={false} />
            </mesh>
            <mesh castShadow receiveShadow geometry={nodes.Cube_6.geometry} material={material} />
            <mesh castShadow receiveShadow geometry={nodes.Cube_7.geometry} material={material} />
            <mesh castShadow receiveShadow geometry={nodes.Cube_8.geometry} material={material} />
            <mesh castShadow receiveShadow geometry={nodes.Cube_9.geometry} material={material} />
            <mesh castShadow receiveShadow geometry={nodes.Cube_10.geometry} material={material} />
        </group>
    )
}

useGLTF.preload('/brink-demo.glb')

export default Model